user  nginx;

# how many instances to start up, creates a instance for each core automatically
worker_processes  auto;

# Log warn or higher errors
error_log  /var/log/nginx/error.log warn;

# Location for the pid file
#pid        /var/run/nginx.pid;

events {
    # how many requests are allowed per worker processes
    worker_connections  1024;
}

http {
    # security settings
    server_tokens off;

    # basic settings
    charset utf-8;
    sendfile        on;
    tcp_nopush     on;

    # be able to serve (correctly) the standard mime types
    include /etc/nginx/mime.types;

    # use a higher keepalive timeout to reduce the need for repeated handshakes (in milliseconds)
    keepalive_timeout  65; 

    # log format called 'main'
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # location for access log using the 'main' format                  
    access_log  /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log main;

    # the default MIME type of a response
    default_type  application/octet-stream;

    # Enable conpression for text/html to speed responses
    gzip on;

    server_names_hash_max_size 6144;
    server_names_hash_bucket_size 128;

    # So Rails can be aware of whether it's HTTP or HTTPS
    proxy_set_header X-Forward-Proto $scheme;

    upstream rails_app {
      server rails:3000;
    }

    # Redirect all HTTP traffic to HTTPS
    server {
       listen 80;

       server_name DOMAIN_NAME # www.domain.com domain.com

       # redirects both www and non-www to https
       return 301 https://$host$request_uri;
   }

   # Server for HTTPS
    server {

        listen 443 ssl;
        server_name $DOMAIN_NAME

        #default root for this server (and all contained location blocks)
        root /usr/share/nginx/html;

        # redirect server error pages to the static page /50x.html
        error_page 401 403 404 /501.html;
        error_page 500 502 503 504 /501.html;
        location = /50x.html {
          root html;
          index index.html;
        }

        location / {
          proxy_pass "http://rails_app/";
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_redirect off;
        }

        # SSL stuff 
        ssl_certificate /etc/letsencrypt/live/DOMAIN_NAME/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/DOMAIN_NAME/privkey.pem;
        

        # Disable SSL protocol because it has been replaced by TLS
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        # Optimize cipher suites
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECH:!MD5; # The ! means don't use that cipher

        # Enable DH Params - allows server to perform key exchanges between client and server with perfect secrecy
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Enable HSTS - Strict transport security
        add_header Strict-Transport-Security "max-age=31536000" always;

        # SSL sessions - enable a simple cache to cache handshakes
        ssl_session_cache shared:SSL:40m;
        ssl_session_timeout 4h;
        ssl_session_tickets on;
    }
    #    server {
    #     listen 80;
    #     #server_name domain_name;

    #     #default root for this server (and all contained location blocks)
    #     root /usr/share/nginx/html;
    #     index index.html;

    #     # deny requests for files that should never be accessed
    #     location ~ /\. {
    #       deny all;
    #     }

    #     location ~* ^.+\.(rb|log)$ {
    #       deny all;
    #     }

    #     # serve static (compiled) assets directly if they exist (for rails production)
    #     location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
    #       try_files $uri @rails;
    #       access_log off;
    #       gzip_static on;

    #       # to serve pre-gzipped version
    #       expires max;
    #       add_header Cache-Control public;

    #       add_header Last-Modified "";
    #       add_header ETag "";
    #       break;
    #     }

    #     # send non-static file requests to the app server
    #     location / {
    #       try_files $uri @rails;
    #     }

    #     location @rails {
    #       proxy_set_header  X-Real-IP  $remote_addr;
    #       proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    #       proxy_set_header Host $http_host;
    #       proxy_redirect off;
    #       proxy_pass http://rails_app/;
    #     }
    # } 
}
